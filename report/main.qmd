---
title: HW2
author: Yian Lin, Haibo Wu, Wakeel Adekunle Kasali
date: 2024-03-01
format: 
  pdf :
    fontsize: 12pt
header-includes: 
  \usepackage{caption}
  \newcommand{\beginAppendix}{
    \setcounter{table}{0}  
    \renewcommand{\thetable}{A\arabic{table}}}
bibliography: ../references/hw2.bib
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
```

```{r}
library(tidyverse)
library(rmiss)
library(knitr)
library(here)
```

# Introduction

# Data Summary


# EDA Analysis
Before doing any analysis, it is important to first assess data missingness. A graph (like Figure 1) can be drawn to visualize the proportion of missing values for all columns in the data set. If there are missing data, it is suggested to create a table to show the data missingness by `Site` for columns with missing data (see Table 1). To see from which intervention type the missing data comes from, an expanded table can be made to show the data missingness by `Site` and `Intervention` for columns with missing data (see Table A1 in Appendix). For columns that will be used in the analysis to answer the research question, it is important to find out why the data are missing.

```{r}
sale_data <- read.table(here("rawdata/june1data.csv"), head=T, sep=",")

#convert DofW, Site and Intervention columns to factor
sale_data <- sale_data %>% 
  mutate_at(c('DofW', 'Site', 'Intervention'), as.factor)
```

```{r fig.height=3}
#missing data, overall
plot_missing_values_proportions(df=sale_data) +
  ggtitle("",subtitle = "Figure 1: The proportion of missing values for all columns in the data set.")
```

```{r}
# data missingness  by Site
count_missing<- sale_data %>%
    group_by(Site) %>%
    summarise(across(.cols = where(~ any(is.na(.x))), ~sum(is.na(.x))))

# Table
kable(count_missing, caption = "Number of missing observations for columns with missing data present by site")
```

To explore the change of daily sales of zero-calorie beverages and bottled sugared beverages over time, time series plot for `ZeroCal` and `Sugary` can be made for each of the three sites (see Figure 2 as an example). It is important to note that the increase in the raw counts of say zero-calorie beverages being sold does not necessarily mean the decrease in the sales of sugared beverages. It could be the case that more customs came to the shops that day so that sales of all things tended to be higher. Therefore, in addition to visualize the change of daily sales using the raw counts, it is suggested to also explore the change of daily sales in percentage terms (using the daily sum of sales of zero-calorie beverages and sugared beverages as the denominator). Change in the percentage can better represent the change in zero-calorie beverages consumption relative to the sugared beverages consumption, and vice versa. 

```{r}
# delete rows with missing data in both ZeroCal and Sugary
sale_data_c <- sale_data %>%
  filter(!(is.na(ZeroCal) | is.na(Sugary)))

# Plot Daily sales of ZeroCal
ggplot(data=sale_data_c, 
       aes(x=Count, y=ZeroCal, group=Site)) +
  geom_line(aes(color=Intervention)) + 
  geom_point(aes(color=Intervention), size=0.5) + 
  facet_wrap( ~ Site, ncol = 1, scales = "free_y") + 
  xlab("Day") + 
  ylab("Daily sales of zero-calorie beverages") +
  ggtitle("",subtitle = "Figure 2: Daily sales of zero-calorie beverages over time for each of the three sites")
```

To compare the consumption of a selected type of beverages (zero-calorie beverages or sugary beverages) among different intervention types, boxplots with sales in percentage terms as y-axis and intervention as x-axis can be made (see Figure 3 as an example).

```{r}
sale_data_c$Sugary_percent <-
  sale_data_c$Sugary/(sale_data_c$Sugary+sale_data_c$ZeroCal)*100
sale_data_c$ZeroCal_percent <-
  sale_data_c$ZeroCal/(sale_data_c$Sugary+sale_data_c$ZeroCal)*100



```

# Formal Analysis


# Conclusion

\newpage
# References

\newpage
# Statistical Appendix
\beginAppendix

```{r}
# data missingness  by Site
count_missing<- sale_data %>%
    group_by(Site, Intervention) %>%
    summarise(across(.cols = where(~ any(is.na(.x))), ~sum(is.na(.x))))

# Table
kable(count_missing, caption = "Number of missing observations for columns with missing data present by site and intervention type.")
 
```